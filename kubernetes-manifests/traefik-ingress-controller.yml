---
# this file contains configuration used to set up the traefik reverse proxy as an
# ingress.
# See https://kubernetes.io/docs/concepts/services-networking/ingress/
# See https://docs.traefik.io/user-guide/kubernetes/

# this is a bunch of roles that traefik needs in order to read information from the kubernetes API
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
  - kind: ServiceAccount
    name: traefik-ingress-controller
    namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
---
# This ensures that there is exactly one traefik instance per running kubernetes node
# This way, any of the IPs in the cluster can respond to any incoming requests
# Note that this service uses the `hostPort` directly
# See https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
  labels:
    k8s-app: traefik-ingress-lb
spec:
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      tolerations:
        # This tolerance is required, since Kubernetes no longer schedules DaemonSet instances
        # by default on master nodes: https://stackoverflow.com/q/48495263/347063
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      containers:
        # We need the ARM32 architecture build, since we are running everything
        # on Raspberry PI 3B+ instances
        - image: arm32v6/traefik
          name: traefik-ingress-lb
          ports:
            - name: http
              containerPort: 80
              # Note that we are reserving host ports: this means that the port is directly
              # exposed to the outside world
              hostPort: 80
            # TODO: possibly to be removed, since we don't want to expose port 8080 directly,
            # but rather through authentication middleware
            - name: admin
              containerPort: 8080
              hostPort: 8080
          securityContext:
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          args:
            - --api
            - --kubernetes
            - --logLevel=INFO
